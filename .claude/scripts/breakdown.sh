#!/bin/bash

# Figma to Shopify Liquid - Breakdown Components
# Analyze Figma design, create tasks, GitHub issues, and branches

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Load helper functions
source "$(dirname "$0")/task-helpers.sh"

echo -e "${PURPLE}⚡ Figma to Liquid - Component Breakdown${NC}\n"

# Check if project is initialized
if [ ! -f .claude/data/figma-project.json ]; then
  echo -e "${RED}❌ Project not initialized. Run /init-figma first.${NC}"
  exit 1
fi

# Check GitHub CLI
if ! command -v gh &> /dev/null; then
  echo -e "${RED}❌ GitHub CLI (gh) not installed.${NC}"
  echo -e "${YELLOW}Install with: brew install gh${NC}"
  exit 1
fi

if ! gh auth status &> /dev/null; then
  echo -e "${RED}❌ Not authenticated with GitHub.${NC}"
  echo -e "${YELLOW}Run: gh auth login${NC}"
  exit 1
fi

# Read project info
FILE_KEY=$(jq -r '.fileKey' .claude/data/figma-project.json)
FILE_NAME=$(jq -r '.fileName' .claude/data/figma-project.json)

echo -e "${BLUE}Project:${NC} $FILE_NAME"
echo -e "${BLUE}File Key:${NC} $FILE_KEY\n"

# Initialize tasks
init_tasks

# Create labels
echo -e "${YELLOW}Creating GitHub labels...${NC}"
LABELS=(
  "figma-conversion:Component conversion from Figma:#7B68EE"
  "liquid-template:Shopify Liquid template:#00D9FF"
  "styling:CSS and styling:#FF6B6B"
  "testing:Playwright testing:#4ECDC4"
  "priority-high:High priority:#FF0000"
  "priority-medium:Medium priority:#FFA500"
  "priority-low:Low priority:#808080"
  "phase-foundation:Foundation phase:#1E90FF"
  "phase-core:Core components:#32CD32"
  "phase-content:Content sections:#FFD700"
  "phase-interactive:Interactive features:#FF69B4"
  "phase-polish:Polish and optimization:#9370DB"
)

for label in "${LABELS[@]}"; do
  IFS=':' read -r name description color <<< "$label"
  gh label create "$name" --description "$description" --color "$color" --force 2>/dev/null || true
done

echo -e "${GREEN}✓ Labels created${NC}\n"

# Prompt for components
echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${YELLOW}Component Breakdown${NC}"
echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}\n"
echo -e "Paste Figma component links (one per line)"
echo -e "Right-click component in Figma → Copy link"
echo -e "Press Ctrl+D when done\n"

COMPONENT_NUM=1
while IFS= read -r figma_link; do
  [ -z "$figma_link" ] && continue

  echo -e "\n${BLUE}Analyzing component $COMPONENT_NUM...${NC}"

  # Extract component name from link (simplified - Claude will use MCP to get actual name)
  COMPONENT_NAME="Component $COMPONENT_NUM"
  SLUG="component-$COMPONENT_NUM"

  # Calculate complexity (placeholder - Claude will use MCP metadata)
  COMPLEXITY=5

  # Check complexity threshold
  MAX_COMPLEXITY=$(jq -r '.maxComplexityScore // 7' .claude/config/chunk-rules.json 2>/dev/null || echo "7")

  if [ "$COMPLEXITY" -gt "$MAX_COMPLEXITY" ]; then
    echo -e "${YELLOW}⚠️  Complexity: $COMPLEXITY/10 (threshold: $MAX_COMPLEXITY)${NC}"
    echo -e "${YELLOW}Consider splitting this component${NC}"
    read -p "Proceed anyway? (y/N): " proceed
    [ "$proceed" != "y" ] && continue
  fi

  # Create GitHub issue
  ISSUE_BODY="**Figma Link**: $figma_link

## Component Details
- Complexity: $COMPLEXITY/10
- Type: Section/Snippet (TBD)

## Tasks
- [ ] Phase 1: Analyze Figma component
- [ ] Phase 2: Implement HTML/CSS/JS
- [ ] Phase 3: Convert to Liquid
- [ ] Visual validation ≥98%
- [ ] Playwright tests passing

## Files
- \`html/$SLUG.html\`
- \`css/$SLUG.css\`
- \`theme/sections/$SLUG.liquid\`

---
Generated by /breakdown"

  ISSUE_NUM=$(gh issue create \
    --title "Implement $COMPONENT_NAME" \
    --body "$ISSUE_BODY" \
    --label "figma-conversion,priority-medium,phase-core" \
    --json number -q '.number')

  echo -e "${GREEN}✓ Created issue #$ISSUE_NUM${NC}"

  # Create branch
  BRANCH="issue-$ISSUE_NUM-$SLUG"
  git checkout -b "$BRANCH" 2>/dev/null || git checkout "$BRANCH"

  # Create task file
  TASK_FILE=$(create_task_file "$ISSUE_NUM" "$COMPONENT_NAME" "$SLUG" "$figma_link" "$COMPLEXITY")
  echo -e "${GREEN}✓ Created task file: $TASK_FILE${NC}"

  # Add task to index
  add_task "$COMPONENT_NUM" "$ISSUE_NUM" "$COMPONENT_NAME" "$SLUG" "$BRANCH" "$figma_link" "$COMPLEXITY"

  # Commit task file
  git add "$TASK_FILE" .claude/tasks/index.json
  git commit -m "Task #$ISSUE_NUM: $COMPONENT_NAME - Initial breakdown"

  COMPONENT_NUM=$((COMPONENT_NUM + 1))
done

# Return to main/master branch
git checkout main 2>/dev/null || git checkout master 2>/dev/null || true

echo -e "\n${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${GREEN}Breakdown Complete!${NC}"
echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}\n"

# Show summary
get_task_stats

echo -e "\n${YELLOW}Next Steps:${NC}"
echo -e "  1. Review tasks: ${BLUE}list_tasks${NC}"
echo -e "  2. Start implementation: ${BLUE}/implement${NC}"
echo -e "  3. Or switch to specific task: ${BLUE}/implement <branch-name>${NC}\n"
